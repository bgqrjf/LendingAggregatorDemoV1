{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_router",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_aaveLogic",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_compoundLogic",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "aaveLogic",
				"outputs": [
					{
						"internalType": "contract IProtocol",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "target",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "allowFailure",
								"type": "bool"
							},
							{
								"internalType": "bytes",
								"name": "callData",
								"type": "bytes"
							}
						],
						"internalType": "struct MulticallHelper.Call3[]",
						"name": "calls",
						"type": "tuple[]"
					}
				],
				"name": "aggregate3",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "success",
								"type": "bool"
							},
							{
								"internalType": "bytes",
								"name": "returnData",
								"type": "bytes"
							}
						],
						"internalType": "struct MulticallHelper.Result[]",
						"name": "returnData",
						"type": "tuple[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "compoundLogic",
				"outputs": [
					{
						"internalType": "contract IProtocol",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getBorrowMarkets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "underlying",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "borrowAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "borrowValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "matchAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "borrows",
								"type": "uint256[]"
							}
						],
						"internalType": "struct QueryHelper.BorrowMarket[]",
						"name": "borrowMarket",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_underlying",
						"type": "address"
					}
				],
				"name": "getCurrentBorrowRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_underlying",
						"type": "address"
					}
				],
				"name": "getCurrentBorrowRates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "aggBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "aaveBorrowRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "compBorrowRate",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_underlying",
						"type": "address"
					}
				],
				"name": "getCurrentSupplyRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_underlying",
						"type": "address"
					}
				],
				"name": "getCurrentSupplyRates",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "aggSupplyRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "aaveSupplyRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "compSupplyRate",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IDToken",
						"name": "dToken",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getDTokenConvertRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_underlying",
						"type": "address"
					}
				],
				"name": "getLendingRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getMarketsInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "totalSupplied",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "supplyRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalBorrowed",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "borrowRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalMatched",
								"type": "uint256"
							}
						],
						"internalType": "struct QueryHelper.MarketInfo[]",
						"name": "markets",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getPlatformInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ISToken",
						"name": "sToken",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getSTokenConvertRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "getSupplyMarkets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "underlying",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "supplyAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "supplyValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "matchAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "supplies",
								"type": "uint256[]"
							}
						],
						"internalType": "struct QueryHelper.SupplyMarket[]",
						"name": "supplyMarket",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					},
					{
						"internalType": "contract IConfig",
						"name": "config",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getTokenInfoWithUser",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "underlying",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "depositAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "borrowAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxLTV",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "liquidationThreshold",
								"type": "uint256"
							}
						],
						"internalType": "struct QueryHelper.TokenInfoWithUser[]",
						"name": "tokenInfoWithUser",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserBorrowed",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "underlying",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "borrowValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "borrowApr",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "borrowLimit",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dailyEstInterest",
								"type": "uint256"
							}
						],
						"internalType": "struct QueryHelper.UserBorrowInfo[]",
						"name": "userBorrowInfo",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_quote",
						"type": "address"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "collateralValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowingValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowLimit",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRouter",
						"name": "router",
						"type": "address"
					},
					{
						"internalType": "contract IPriceOracle",
						"name": "oracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserSupplied",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "underlying",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "depositValue",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "depositApr",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "availableBalance",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "dailyEstProfit",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "collateral",
								"type": "bool"
							}
						],
						"internalType": "struct QueryHelper.UserSupplyInfo[]",
						"name": "userSupplyInfo",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "router",
				"outputs": [
					{
						"internalType": "contract IRouter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/helper/QueryHelper.sol": "QueryHelper"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
			"license": "MIT",
			"urls": [
				"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
				"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"contracts/helper/MulticallHelper.sol": {
			"keccak256": "0x55e4c9abce0c05c6c161d8f048f7ce9d977237cbcc50451885f926d6c6908892",
			"license": "MIT",
			"urls": [
				"bzz-raw://d399df9681f2204b26d21869c3e4a9d227af54e792dc9efdb062fcd6e8b69489",
				"dweb:/ipfs/Qma8u7L7L8FgnGXuR9L4wr1kqEhJb5qGX9bbkDtrsoE16Q"
			]
		},
		"contracts/helper/QueryHelper.sol": {
			"keccak256": "0x9442011cb78d06861404fefbd89f0468b35282175608e618cd6e83317e1589e3",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a88882f0aa00be229be10effeca5f3d091a88e8668c4c63ddc2f9e704e4c4af",
				"dweb:/ipfs/QmbRjUH1v8qbeVbGuoj6ptcxtK2jW8xn5dfqRKLuWzNHrL"
			]
		},
		"contracts/helper/RatesHelper.sol": {
			"keccak256": "0x54bbc6dcdbda746655bd30453b6ddee91abf5989e81604f3592a6d42e3aab41c",
			"license": "Unlicensed",
			"urls": [
				"bzz-raw://fe6aff044b61f1cd717bb9bece644139b70cbd61c87907a3e25f3a5bf07f85c6",
				"dweb:/ipfs/QmaC7sGbxVBK71DQnxLHYT5uBd3NbzRRgrXM3EdfVtcTrU"
			]
		},
		"contracts/interfaces/IConfig.sol": {
			"keccak256": "0x30cafa4a83bdb5bd698486636c7877f011708693090a6da8114757d57fcd6a7c",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://f9ed645e61036a5e784ea5fe22696666c0ca7cae00139b891a313de184bc711a",
				"dweb:/ipfs/QmdsDVdpQy1sQkykUiRM8M2kDpw6wiL8jL2cSvJfqWoam6"
			]
		},
		"contracts/interfaces/IDToken.sol": {
			"keccak256": "0xb511f8bda6db57d91e91b601f7ce610433404f432bf93543a6fb328013294d12",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://ddb6022de9defd1e4d5a0bc6967f37ab83b67ebcdfcc79eb435be3c46c6ba6f4",
				"dweb:/ipfs/QmWm5gbbukp1u2uS6XAiDuKg8sboiQS6UtgxRD8gFd3xnf"
			]
		},
		"contracts/interfaces/IPriceOracle.sol": {
			"keccak256": "0x50a90a6c4287bf5597e8333947e6ae47f2f8af62a88dfe997f058b277dc83f2e",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://1b1d35b9a46a73d5a8c3f753a0108fbf6dd2e558a99c23fdb47a22651e0aac7c",
				"dweb:/ipfs/QmSZi8aaypEiX6DW3KvLFcYtDiHrboP14PDcKXxwLth9pr"
			]
		},
		"contracts/interfaces/IProtocol.sol": {
			"keccak256": "0xa20eb0c0f867a781227a1b847ea33c8f56d3c5d193644ec20d17069b591e9ec2",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://9348aad0526ae99cd9ffc6a929bd9626c7913c54ca4b1386aa87418f3489f869",
				"dweb:/ipfs/QmPTVDXCM1d39VFTrRpEEv5FzffuLjXQidtKahRizQhA37"
			]
		},
		"contracts/interfaces/IProtocolsHandler.sol": {
			"keccak256": "0x9ee195ac6cadda40153872f57b4c094ab5b151caf94df99540a41a709f8c3e78",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://92d6060b68ab432a2ba55f3611f04cd1c3897aa429a492fae058b88a85f19487",
				"dweb:/ipfs/QmWecaQYEhijN9iPZRaTSefjdz44ihgLkgQLBaiuSyN52r"
			]
		},
		"contracts/interfaces/IReservePool.sol": {
			"keccak256": "0xe6b05c9199bb18b448895cbe702557685ffac560e500263de1f7c730044938bb",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://2c914b44a8c55dd8e490d9aab22fe1f4133c5860c8273aafa675b5dac172ad04",
				"dweb:/ipfs/QmXY3EhaSDm2HfGXh441f5tHCVdCFaGqqCxsGx8uJE5ry6"
			]
		},
		"contracts/interfaces/IRewards.sol": {
			"keccak256": "0xb1a000803b95c2645cdb802596a7528351ea055dcc1693cdada32905b607dfec",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://fba2857514781da22f12f4889cbf0bd266ff478d3db1b5974f674c3c6079fc13",
				"dweb:/ipfs/QmbroR7oDV3G3Sw73EzxvYcWMgpXmUiyGTfMAKSm9etqio"
			]
		},
		"contracts/interfaces/IRouter.sol": {
			"keccak256": "0x684161dd8b5bad5259efda7c63ceb6418aa77a059a7a6a64b40d772f842c7b34",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://270234e6c5d12998292314f73eff461d1672fd87153bb3b43a918f6f3886d88f",
				"dweb:/ipfs/QmRcwYF2c8XYAU6eU8Vhb68KFmKftKVWvp78QCEkqZFdWp"
			]
		},
		"contracts/interfaces/ISToken.sol": {
			"keccak256": "0x1450d952a9e6043b191cd4b08338cae11f342c2cd931ea91d9efc3cf9eb74223",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://928626d21849a2f79a3ad163098bafcfa8545bd2c85b4a91a6d33c5b67a7bc8d",
				"dweb:/ipfs/QmYHxxT8sBmJJJDTKfqQbpvsGhCVd2bGPfB1r3RzaKV5uD"
			]
		},
		"contracts/interfaces/IStrategy.sol": {
			"keccak256": "0x7e5c96a5fe2285c06407392b346a193e2ebb7834d9ac45fc71d7b318db348982",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://0ed89cb2b99bf53dffa7917c9ef538af00e2952b4512c05ee251861df0080d45",
				"dweb:/ipfs/QmdemvDpyNYjjGYG7TvP7ARS1Pv8qw6yBQhR3vynj8PPcF"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0xf8008006332b600cedd02c9e2f7394c901a2868c07df365570b2419a578a8b6f",
			"license": "MIT",
			"urls": [
				"bzz-raw://2a636ab5994bd641843e284a79a10d7e86a27f680cbe7389a9111b3de6622aff",
				"dweb:/ipfs/QmfWGjY2tCN8Y4n919RoAL46WmLrAxCzQShuemq852FFGp"
			]
		},
		"contracts/libraries/internals/Types.sol": {
			"keccak256": "0x3a20eaf17a4513776f76352c17f1b3f20fd809d349073844c526bbae65ce685a",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://2057bafe59720f5b2592871299f67b84b869ba52c5a5a251010f474595929bee",
				"dweb:/ipfs/QmUAGbnVKmzEtJbSWhfp1csF7AdC6TLeo2iTmuFo15xLQG"
			]
		},
		"contracts/libraries/internals/Utils.sol": {
			"keccak256": "0xee7b617856af5f8f0032e965e33438e675052368224094743eae7f4aaf861c3f",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://57d909bf6f6b7babe5fa9dfe2adc3833597a077cb0bdd4aff9385b97a89745c9",
				"dweb:/ipfs/QmPhCDbTqd2JELa7TDVowEvoTZpmfipDuwjJUA6ggntAgm"
			]
		}
	},
	"version": 1
}